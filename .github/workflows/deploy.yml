name: CI/CD Pipeline for AWS Lambda

on:
  push:
    branches:
      - master  # Change to your branch if needed

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Verify `pom.xml` exists
      - name: Check for pom.xml
        run: |
          if [ ! -f simple-springboot-app/pom.xml ]; then
            echo "pom.xml not found!"
            exit 1
          fi

      # Step 3: Set up Java & Maven
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # Step 4: Build with Maven (from correct directory)
      - name: Build Project
        run: |
          cd simple-springboot-app
          mvn clean package

      # Step 5: Upload JAR to S3
      - name: Upload JAR to S3
        run: |
          aws s3 cp simple-springboot-app/target/*.jar s3://test-93481098/simple-springboot-app-0.0.1-SNAPSHOT.jar
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-east-1"

      # Step 6: Deploy to AWS Lambda
      - name: Deploy to AWS Lambda
        run: |
          aws lambda update-function-code \
            --function-name test-function \
            --s3-bucket test-93481098 \
            --s3-key simple-springboot-app-0.0.1-SNAPSHOT.jar
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-east-1"

      # Step 7: Trigger API Gateway
      - name: Trigger API Gateway
        run: |
          curl -X POST https://anisha.pacewisdom.in/
